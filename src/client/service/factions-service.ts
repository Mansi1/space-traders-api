/**
 * This file was generated by st-open-api
 */
import {ErrorHandler} from '../interface/i-$-open-api';
import {IGetFactionResponse} from '../interface/response/i-get-faction-response';
import {IGetFactionsQueryParameter} from '../interface/parameter/i-get-factions-query-parameter';
import {IGetFactionsResponse} from '../interface/response/i-get-factions-response';
import {RequestInterceptor} from '../interface/i-$-open-api';
import {ResponseInterceptor} from '../interface/i-$-open-api';
import {http} from '../function/http';
import {openApi} from '../function/open-api';

export class FactionsService {

    /*
     * View the details of a faction.
     */
    getFaction = async (interceptor: RequestInterceptor = openApi.requestInterceptor, errorHandler: ErrorHandler = openApi.errorHandler, responseInterceptor: ResponseInterceptor<any> = openApi.responseInterceptor): Promise<IGetFactionResponse> => {
    
        const response = await http({
                method: 'GET',
                url: `${openApi.endpointUrl}/factions/{factionSymbol}`,
                header: {
                    Accept: 'application/json',
                },
            },
            interceptor,
            errorHandler,
            responseInterceptor
        );
        return JSON.parse(response);
    };
    

    /*
     * List all discovered factions in the game.
     */
    getFactions = async (queryParameter: IGetFactionsQueryParameter, interceptor: RequestInterceptor = openApi.requestInterceptor, errorHandler: ErrorHandler = openApi.errorHandler, responseInterceptor: ResponseInterceptor<any> = openApi.responseInterceptor): Promise<IGetFactionsResponse> => {
    
        const queryParam = [
            {name: 'page', value: queryParameter.page},
            {name: 'limit', value: queryParameter.limit},
        ];
    
        const response = await http({
                method: 'GET',
                url: `${openApi.endpointUrl}/factions`,
                queryParameter: queryParam,
                header: {
                    Accept: 'application/json',
                },
            },
            interceptor,
            errorHandler,
            responseInterceptor
        );
        return JSON.parse(response);
    };
    

}
