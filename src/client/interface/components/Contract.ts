/**
 * This file was generated by st-open-api
 */
import { ContractTerms } from './ContractTerms'
import { ContractType } from './ContractType'

/**
 * Open-api schema
 * {
 *   "description": "",
 *   "type": "object",
 *   "properties": {
 *     "id": {
 *       "type": "string",
 *       "minLength": 1
 *     },
 *     "factionSymbol": {
 *       "type": "string",
 *       "minLength": 1,
 *       "description": "The symbol of the faction that this contract is for."
 *     },
 *     "type": {
 *       "type": "string",
 *       "enum": [
 *         "PROCUREMENT",
 *         "TRANSPORT",
 *         "SHUTTLE"
 *       ]
 *     },
 *     "terms": {
 *       "$ref": "#/components/schemas/ContractTerms"
 *     },
 *     "accepted": {
 *       "type": "boolean",
 *       "default": false,
 *       "description": "Whether the contract has been accepted by the agent"
 *     },
 *     "fulfilled": {
 *       "type": "boolean",
 *       "default": false,
 *       "description": "Whether the contract has been fulfilled"
 *     },
 *     "expiration": {
 *       "type": "string",
 *       "format": "date-time",
 *       "description": "The time at which the contract expires"
 *     }
 *   },
 *   "required": [
 *     "id",
 *     "factionSymbol",
 *     "type",
 *     "terms",
 *     "accepted",
 *     "fulfilled",
 *     "expiration"
 *   ]
 * }
 */
export interface Contract {

    /**
     * Whether the contract has been accepted by the agent
     */
    accepted: boolean;

    /**
     * The time at which the contract expires
     * open-api format: date-time
     */
    expiration: Date;

    /**
     * The symbol of the faction that this contract is for.
     * open-api validation:
     *   - minLength: 1
     */
    factionSymbol: string;

    /**
     * Whether the contract has been fulfilled
     */
    fulfilled: boolean;

    /**
     * open-api validation:
     *   - minLength: 1
     */
    id: string;

    terms: ContractTerms;

    type: ContractType;

}
